def max_value(board, alpha=-inf, beta=inf):
    if not board.available_spaces:
        return 0
    value = alpha
    for row, column in board.available_spaces:
        temp_board = deepcopy(board)
        temp_board.make_move('X', row, column)
        # # print(f'MAX PRINT\n{temp_board}')
        if check_win(temp_board, 'X'):
            # # print('MAX PRINT - win')
            return inf
        value = max(value, min_value(temp_board, alpha, beta))
        alpha = max(alpha, value)
        if alpha >= beta:
            break
    # # print('MAX PRINT', value)
    return value


def min_value(board, alpha=-inf, beta=inf):
    if not board.available_spaces:
        return 0
    value = beta
    for row, column in board.available_spaces:
        temp_board = deepcopy(board)
        temp_board.make_move('O', row, column)
        # # print(f'MIN PRINT\n{temp_board}')
        if check_win(temp_board, 'O'):
            # # print('MIN PRINT - win')
            return -inf
        value = min(value, max_value(temp_board, alpha, beta))
        beta = min(beta, value)
        if alpha >= beta:
            break
    # # print('MIN PRINT', value)
    return value